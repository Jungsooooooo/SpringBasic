<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
	스프링의 객체관리 기본정책은 한번 등록된 Bean은 계속 요청이 들어와도 만들어 둔 것을 계속 내어준다.
	스프링은 별도의 설정을 하지 않을 경우 한 개의 Bean 객체만을 생성하며,
	이들 빈 객체들이 싱글톤(Singleton) 범위를 갖는다고 표현한다.
	싱글톤은 단일 객체(Single Object)를 의미하는 단어로서,
	스프링은 한개의 <bean> 태그에 대해 한 개의 Bean 객체를 생성한다.
	-->
	
	<!-- Coffee coffee = new Coffee(); -->
	<bean id="coffee" class="com.edu.basic.coffee.coffee4.Coffee"></bean>

	<!-- 
	<bean id="coffee" class="com.edu.basic.coffee.coffee4.Coffee" lazy-init="true"></bean>
	lazy-init의 속성을 "true"로 주면 이 객체는 첫번째 getBean이 일어날 때까지 객체를 만들지 않는다.
	-->
	
	<!-- 
	<bean id="coffee" class="com.edu.basic.coffee.coffee4.Coffee"></bean>
	scope 속성을 별도로 지정하지 않으면 singleton으로 설정한다.
	그래서 한번 등록한 Bean은  계속 요청이 들어와도 이미 만들어 둔것을 계속 내어준다.
	singleton	=> 만들어 놓은 것을 계속 내어주는 것이다.(기본 정책)
	prototype	=> 달라고 요청할 때마다 새것으로 만들어 준다.
	request		=> 리퀘스트가 새로 생길 때마다 새로 생성해 준다.
	session		=> 세션이 바뀔때마다 새로 생성해 준다.
	-->
</beans>








